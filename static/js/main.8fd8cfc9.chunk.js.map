{"version":3,"sources":["Components/TopNav/Colligan_Resume.pdf","Components/TopNav/TopNav.jsx","Components/Intro/Intro.jsx","Components/Skills/Skills.jsx","Components/Experience/Experience.jsx","Components/Education/Education.jsx","Components/BottomNav/BottomNav.jsx","Components/MainContainer/MainContainer.jsx","App.jsx","Reducers/IsMobileReducer.js","Reducers/IsInvertedReducer.js","Reducers/VisibleContentReducer.js","Reducers/RootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","TopNav","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","componentDidMount","window","addEventListener","handleScroll","setState","hideNavBackground","pageYOffset","downloadResume","open","require","setMenuClass","state","isMobile","_inherits","_createClass","key","value","_this$props","visibleContent","isInverted","scrollToTop","scrollToContent","mainLogoContainer","React","createElement","className","concat","onClick","menuItems","name","id","dur","menuItemContainer","Menu","position","map","item","i","Fade","top","duration","spy","appear","Item","active","downloadButtonContainer","Button","content","color","secondary","compact","size","borderless","fixed","inverted","Component","connect","IsInvertedReducer","IsMobileReducer","VisibleContentReducer","introHeaders","divType","headerClass","spanClass","text","Fragment","Container","textAlign","header","Header","as","Bounce","bottom","delay","circular","icon","type","Icon","skillsSubHeader","skillsColumns","cols","group","length","createSkillsIconList","skillsGridColumns","colClass","Segment","padded","Grid","col","Column","computer","tablet","mobile","Flip","Row","verticalAlign","width","timelineDescription","containerClass","title","time","card","Timeline","direction","description","tags","lineHeight","gridColumns","columnProps","revealProps","left","headerText","right","relaxed","Object","assign","row","j","Divider","vertical","isSnapSet","contactIconList","List","horizontal","link","href","target","Content","contactLinkRows","rowClass","contactLinksContent","scrollToTopButton","distance","footerGridColumns","columnClass","stackable","MainContainer","resize","setTimeout","elemId","document","getElementById","scrollIntoView","behavior","scrollTo","_this2","handleUpdateVisibleContent","contentContainers","Intro","contentId","contentClass","contentName","visibilityThreshold","Skills","Experience","Education","container","c","centered","InView","threshold","onChange","inView","BottomNav","Checkbox","toggle","handleUpdateIsInverted","dispatch","App","apply","arguments","initState","undefined","currentIsMobileState","innerWidth","action","RootReducer","combineReducers","store","createStore","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.8fd8cfc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Colligan_Resume.139d8048.pdf\";","import React, { Component } from 'react';\r\nimport { Menu, Button } from 'semantic-ui-react';\r\nimport { Fade } from 'react-reveal';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './TopNav.scss';\r\n\r\nclass TopNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hideNavBackground: true\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll = () => {\r\n        this.setState({ hideNavBackground: window.pageYOffset === 0 ? true : false });\r\n    }\r\n\r\n    downloadResume = () => {\r\n\t\twindow.open(require('./Colligan_Resume.pdf'));\r\n\t}\r\n\r\n    setMenuClass = () => {\r\n        const {hideNavBackground} = this.state,\r\n            {isMobile} = this.props;\r\n\r\n        if (isMobile) {\r\n            return hideNavBackground ? 'top-nav top-nav-mobile' : 'top-nav floating-nav top-nav-mobile';\r\n        } else {\r\n            return hideNavBackground ? 'top-nav' : 'top-nav floating-nav';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {hideNavBackground} = this.state,\r\n            {visibleContent,isInverted, isMobile, scrollToTop, scrollToContent} = this.props;\r\n\r\n        const mainLogoContainer = (\r\n            <div className='main-logo-container'>\r\n                <div className={`main-logo ${isInverted ? 'main-logo-inverted' : ''}`} onClick={scrollToTop}>MC</div>\r\n            </div>\r\n        );\r\n\r\n        let menuItems = [\r\n            {name: !isMobile ? 'Technical Skills' : 'Skills', id: 'skills-content', dur: 1000 },\r\n            {name: 'Experience', id: 'experience-content', dur: 1100 },\r\n            {name: 'Education', id: 'education-content', dur: 1210 }\r\n        ];\r\n\r\n        const menuItemContainer = (\r\n            <Menu.Menu className='menu-item-container' position='left'>\r\n                {menuItems.map((item, i) => {\r\n                    const {name, id, dur} = item;\r\n                    return (\r\n                        <Fade key={i} top duration={dur} spy={isInverted} appear>\r\n                            <Menu.Item className='top-nav-link' active={visibleContent === name}>\r\n                                <span className='top-nav-link-text' onClick={() => scrollToContent(id)}>{name}</span>\r\n                            </Menu.Item>\r\n                        </Fade>\r\n                    ) \r\n                })}\r\n            </Menu.Menu>\r\n        );\r\n\r\n        const downloadButtonContainer = !hideNavBackground && (\r\n            <Menu.Menu className='menu-item-container' position='right'>\r\n                <Menu.Item className='download-container'>\r\n                    <Button className='resume-button' content='Resume' color={isInverted ? 'blue' : null} secondary={!isInverted} compact onClick={this.downloadResume} />\r\n                </Menu.Item>\r\n            </Menu.Menu>\r\n        );\r\n\r\n        return (\r\n            \r\n                <Menu className={this.setMenuClass()} size='massive' borderless fixed='top' inverted={hideNavBackground}>\r\n                    {mainLogoContainer}\r\n                    {menuItemContainer}\r\n                    {!isMobile && downloadButtonContainer}\r\n                </Menu>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInverted: state.IsInvertedReducer.isInverted,\r\n        isMobile: state.IsMobileReducer.isMobile,\r\n        visibleContent: state.VisibleContentReducer.visibleContent\r\n\r\n    } \r\n}\r\n\r\nexport default connect(mapStateToProps)(TopNav);","import React from 'react';\r\nimport { Container, Header, Button, Icon } from 'semantic-ui-react';\r\nimport { Bounce } from 'react-reveal';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TopNav from '../TopNav/TopNav';\r\n\r\nimport './Intro.scss';\r\n\r\nconst Intro = (props) => {\r\n\tconst {isMobile, scrollToContent, scrollToTop} = props;\r\n\r\n\tlet introHeaders = [\r\n\t\t{ \r\n\t\t\tdivType: !isMobile ? 'h1' : 'h3', \r\n\t\t\theaderClass: null,\r\n\t\t\tspanClass: 'intro-main-text', \r\n\t\t\ttext: 'Michael Colligan' \r\n\t\t},\r\n\t\t{ \r\n\t\t\tdivType: 'h3', \r\n\t\t\theaderClass: 'sub-header-container',\r\n\t\t\tspanClass: `intro-sub-text${isMobile ? '-mobile' : ''}`, \r\n\t\t\ttext: 'Full-Stack Software Engineer' \r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TopNav scrollToTop={scrollToTop} scrollToContent={scrollToContent} />\r\n\t\t\t<Container className='intro-container' text textAlign='center'>\r\n\t\t\t\t{introHeaders.map((header, i) => {\r\n\t\t\t\t\tconst {divType, headerClass, spanClass, text} = header;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Header key={i} as={divType} className={headerClass}>\r\n\t\t\t\t\t\t\t<span className={spanClass}>{text}</span>\r\n\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<Bounce bottom duration={1400} delay={500}>\r\n\t\t\t\t\t<Button className='explore-button' circular icon size='huge' inverted type='submit' onClick={() => scrollToContent('skills-content')}>\r\n\t\t\t\t\t\t<Icon name='arrow down' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Bounce>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isMobile: state.IsMobileReducer.isMobile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Intro);","import React from 'react';\r\nimport { Container, Grid, Header, Segment } from 'semantic-ui-react';\r\nimport { Flip } from 'react-reveal';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Skills.scss';\r\n\r\nconst Skills = (props) => {\r\n\tconst {isInverted, isMobile} = props;\r\n\r\n    const createSkillsIconList = () => {\t\t\r\n\t\tlet cols = [\r\n\t\t\t{icon: 'javascript-plain', text: 'JavaScript'},\r\n\t\t\t{icon: 'html5-plain', text: 'HTML5'},\r\n\t\t\t{icon: 'css3-plain', text: 'CSS3'},\r\n\t\t\t{icon: 'sass-original', text: 'Sass'},\r\n\t\t\t{icon: 'python-plain', text: 'Python'},\r\n\t\t\t{icon: 'csharp-plain', text: 'C#'},\r\n\t\t\t{icon: 'react-original', text: 'React'},\r\n\t\t\t{icon: 'jquery-plain', text: 'jQuery'},\r\n\t\t\t{icon: 'bootstrap-plain', text: 'Bootstrap'},\r\n\t\t\t{icon: 'knockout-plain-wordmark', text: 'Knockout'},\r\n\t\t\t{icon: 'flask-original', text: 'Flask'},\r\n\t\t\t{icon: 'dot-net-plain', text: '.NET'},\r\n\t\t\t{icon: 'nodejs-plain', text: 'Node.js'},\r\n\t\t\t{icon: 'selenium-original', text: 'Selenium'},\r\n\t\t\t{icon: 'pytest-plain', text: 'Pytest'},\r\n\t\t\t{icon: 'visualstudio-plain', text: 'Visual Studio'},\r\n\t\t\t{icon: 'jira-plain', text: 'Jira'},\r\n\t\t\t{icon: 'microsoftsqlserver-plain', text: 'MS SQL Server'},\r\n\t\t\t{icon: 'git-plain', text: 'Git'},\r\n\t\t\t{icon: 'bitbucket-original', text: 'Bitbucket'},\r\n\t\t\t{icon: 'github-original', text: 'GitHub'},\r\n\t\t\t{icon: 'sourcetree-original', text: 'Sourcetree'},\r\n\t\t\t{icon: 'xd-plain', text: 'XD'},\r\n\t\t\t{icon: 'photoshop-plain', text: 'Photoshop'}\r\n\t\t];\r\n\r\n\t\tlet group = 0;\r\n\t\tfor (let i = 0; i < cols.length; i++) {\r\n\t\t\tcols[i]['group'] = group;\r\n\t\t\tgroup++;\r\n\t\t\tgroup = group === 3 ? 0 : group;\r\n\t\t}\r\n\t\treturn cols;\r\n\t}\r\n\r\n\tconst skillsSubHeader = (\r\n\t\t<Header as='h2' className='technical-skills-subheader' content='Languages, Frameworks & Libraries, Other Software Proficiencies' />\r\n\t);\r\n\r\n\tlet skillsColumns = createSkillsIconList();\r\n\r\n\tconst skillsIconsSegmentContent = (\r\n\t\t<Segment className={isMobile ? 'skills-segment-mobile' : `skills-segment${isInverted ? '-inverted' : ''}`} padded='very'>\r\n\t\t\t<Grid className='skills-icons-grid'>\r\n\t\t\t\t{skillsColumns.map((col, i) => {\r\n\t\t\t\t\tconst {group, icon, text} = col;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid.Column key={i} className={`skills-icon-${group}`} computer={2} tablet={2} mobile={4}>\r\n\t\t\t\t\t\t\t<Flip top duration={!isMobile ? 1750 : 500} spy={isInverted} appear>\r\n\t\t\t\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t\t\t\t<i className={`devicon-${icon} skills-icon`}></i>\r\n\t\t\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t\t\t\t<Grid.Row className='icon-label-row'>\r\n\t\t\t\t\t\t\t\t\t<span>{text}</span>\r\n\t\t\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t\t\t</Flip>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</Segment>\r\n\t);\r\n\r\n\tlet skillsGridColumns = [\r\n\t\t{colClass: null, content: skillsSubHeader},\r\n\t\t{colClass: 'skills-icons-container', content: skillsIconsSegmentContent}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Container textAlign='center'>\r\n\t\t\t<Header as='h1' className='technical-skills-header'>Technical Skills</Header>\r\n\t\t\t<Grid className='skills-container' verticalAlign='middle' textAlign='center'>\r\n\t\t\t\t{skillsGridColumns.map((col, i) => {\r\n\t\t\t\t\tconst {colClass, content} = col;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid.Column key={i} className={colClass} width={16}>\r\n\t\t\t\t\t\t\t{content}\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInverted: state.IsInvertedReducer.isInverted,\r\n\t\tisMobile: state.IsMobileReducer.isMobile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Skills);","import React from 'react';\r\nimport { Container, Header } from 'semantic-ui-react';\r\nimport Timeline from 'react-timeline-semantic-ui';\r\nimport { Fade } from 'react-reveal';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Experience.scss';\r\n\r\nconst Experience = (props) => {\r\n\tconst {isMobile, isInverted} = props;\r\n\r\n\tlet timelineCards = [\r\n\t\t{\r\n\t\t\tcontainerClass: 'timeline-present', \r\n\t\t\ttitle: 'Software Engineer', \r\n\t\t\ttime: 'March 2018 - February 2024'\r\n\t\t},\r\n\t\t{\r\n\t\t\tcontainerClass: 'timeline-middle', \r\n\t\t\ttitle: 'Senior Technical Analyst', \r\n\t\t\ttime: 'January 2017 - March 2018'\r\n\t\t},\r\n\t\t{\r\n\t\t\tcontainerClass: 'timeline-start', \r\n\t\t\ttitle: 'Technical Analyst', \r\n\t\t\ttime: 'August 2015 - January 2017'\r\n\t\t}\r\n\t];\r\n\r\n\tconst timelineDescription = (\r\n\t\t<>\r\n\t\t\t<span className='bold-text'>D+R International</span>\r\n\t\t\t<br></br>\r\n\t\t\t<span>Silver Spring, MD</span>\r\n\t\t</>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Container textAlign='center'>\r\n\t\t\t<Header as='h1' className='experience-header'>Experience</Header>\r\n\t\t\t<Container className={`timeline-container${isMobile ? '-mobile' : ''}`}>\r\n\t\t\t\t{timelineCards.map((card, i) => {\r\n\t\t\t\t\tconst {containerClass, title, time} = card;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={i} className={containerClass}>\r\n\t\t\t\t\t\t\t<Fade bottom duration={1250} spy={isInverted} appear>\r\n\t\t\t\t\t\t\t\t<Timeline direction={isMobile ? 'right' : i % 2 === 0 ? 'left' : 'right'} title={title} time={time} description={timelineDescription} tags={[]} lineHeight={1} />\r\n\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Container>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\t\tisMobile: state.IsMobileReducer.isMobile,\r\n        isInverted: state.IsInvertedReducer.isInverted\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Experience);","import React from 'react';\r\nimport { Container, Grid, Header, Divider, Segment } from 'semantic-ui-react';\r\nimport { Fade } from 'react-reveal';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Education.scss';\r\n\r\nconst Education = (props) => {\r\n    const {isMobile, isInverted} = props;\r\n\r\n    let gridColumns = [\r\n        {\r\n            columnProps: {textAlign: isMobile ? 'center' : 'right'}, \r\n            revealProps: {left: isMobile ? false: true},\r\n            headerText: [\r\n                {spanClass: 'sub-header-highlighted college-text', content: 'University of Florida'},\r\n                {spanClass: null, content: 'Gainesville, FL'},\r\n                {spanClass: null, content: '2010 - 2015'}\r\n            ]\r\n        },\r\n        {\r\n            columnProps: {textAlign: isMobile ? 'center' : 'left'}, \r\n            revealProps: {right: isMobile ? false : true},\r\n            headerText: [\r\n                {spanClass: 'sub-header-highlighted', content: 'Bachelor of Science in'},\r\n                {spanClass: 'sub-header-highlighted', content: 'Sustainability and the Built Environment'},\r\n                {spanClass: 'honors-text', content: 'Summa Cum Laude'}\r\n            ]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Container textAlign='center'>\r\n            <Header as='h1' className='education-header'>Education</Header>\r\n            <Container className={!isMobile ? 'college-info-container' : null}>\r\n                <Segment className='invisible-segment'>\r\n                    <Grid textAlign='center' relaxed='very' verticalAlign='middle'>\r\n                        {gridColumns.map((col, i) => {\r\n                            const {columnProps, revealProps, headerText} = col;\r\n                            return (\r\n                                <Grid.Column key={i} {...columnProps} computer={8} tablet={8} mobile={16}>\r\n                                    <Fade {...revealProps} spy={isInverted} appear>\r\n                                        <Header className='header-label' as='h2'>\r\n                                            {headerText.map((row, j) => {\r\n                                                const {spanClass, content} = row;\r\n                                                return (\r\n                                                    <div key={j}>\r\n                                                        <span className={spanClass}>{content}</span>\r\n                                                        <br></br>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </Header>\r\n                                    </Fade>\r\n                                </Grid.Column>\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                    {!isMobile && <Divider vertical />}\r\n                </Segment>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\t\tisMobile: state.IsMobileReducer.isMobile,\r\n        isInverted: state.IsInvertedReducer.isInverted\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Education);","import React from 'react';\r\nimport { Grid, Icon, List, Header, Container, Button } from 'semantic-ui-react';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './BottomNav.scss';\r\n\r\nconst BottomNav = (props) => {\r\n\tconst {isInverted, isMobile, scrollToTop, isSnapSet} = props;\r\n\r\n\tconst contactIcons = [\r\n\t\t{link: 'https://github.com/mcolligan91', icon: 'devicon-github-original'},\r\n\t\t{link: 'https://www.linkedin.com/in/michael-colligan-189aa196', icon: 'devicon-linkedin-plain'},\r\n\t];\r\n\r\n\tconst contactIconList = (\r\n\t\t<>\r\n\t\t\t<List className='contact-icons-list-container' horizontal size='large'>\r\n\t\t\t\t{contactIcons.map((item, i) => {\r\n\t\t\t\t\tconst {link, icon} = item;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<List.Item key={i} as='a' href={link} target='_blank'>\r\n\t\t\t\t\t\t\t<List.Content className='contact-link-content'>\r\n\t\t\t\t\t\t\t\t<i className={`${icon} contact-link`}></i>\r\n\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</List>\r\n\t\t</>\r\n\t);\r\n\r\n\tconst emailLink = (\r\n\t\t<>\r\n\t\t\t<a href='mailto:mcolligan91@gmail.com'>\r\n\t\t\t\t<span className='email-link'>mcolligan91@gmail.com</span>\r\n\t\t\t</a>\r\n\t\t</>\r\n\t);\r\n\r\n\tlet contactLinkRows = [\r\n\t\t{rowClass: 'email-row', content: emailLink},\r\n\t\t{rowClass: 'contact-icons-row', content: contactIconList}\r\n\t];\r\n\r\n\tconst contactLinksContent = (\r\n\t\t<Container>\r\n\t\t\t<Header className='footer-header' as='h3' content='Contact' />\r\n\t\t\t<Grid textAlign='center'>\r\n\t\t\t\t{contactLinkRows.map((row, i) => {\r\n\t\t\t\t\tconst {rowClass, content} = row;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid.Row key={i} className={rowClass}>\r\n\t\t\t\t\t\t\t{content}\r\n\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t);\r\n\r\n\tconst scrollToTopButton = (\r\n\t\t<Fade bottom distance={isMobile ? '10%' : '100%'} spy={isInverted} appear>\r\n\t\t\t<Button circular icon size='huge' color={isInverted ? 'blue' : 'black'} onClick={scrollToTop}>\r\n\t\t\t\t<Icon name='arrow up' />\r\n\t\t\t</Button>\r\n\t\t</Fade>\r\n\t);\r\n\r\n\tlet footerGridColumns = [\r\n\t\t{\r\n\t\t\tcontent: contactLinksContent, \r\n\t\t\tcolumnClass: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tcontent: <div>© 2022 - Michael Colligan</div>, \r\n\t\t\tcolumnClass: 'copyright-text'\r\n\t\t},\r\n\t\t{\r\n\t\t\tcontent: scrollToTopButton, \r\n\t\t\tcolumnClass: 'scroll-up-botton-container'\r\n\t\t}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid className={`bottom-nav-container${isInverted ? '-inverted' : ''} ${isSnapSet ? 'content-container' : ''}`} textAlign='center' stackable>\r\n\t\t\t\t{footerGridColumns.map((col, i) => {\r\n\t\t\t\t\tconst {content, columnClass} = col;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Grid.Column key={i} className={columnClass} width={16}>\r\n\t\t\t\t\t\t\t{content}\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInverted: state.IsInvertedReducer.isInverted,\r\n\t\tisMobile: state.IsMobileReducer.isMobile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BottomNav);","import React, { Component } from 'react';\r\nimport { Grid, Checkbox } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { InView } from 'react-intersection-observer';\r\n\r\nimport Intro from '../Intro/Intro';\r\nimport Skills from '../Skills/Skills';\r\nimport Experience from '../Experience/Experience';\r\nimport Education from '../Education/Education';\r\nimport BottomNav from '../BottomNav/BottomNav';\r\n\r\nimport './MainContainer.scss';\r\n\r\nclass MainContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\tisSnapSet: false\r\n\t\t}\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\t\tconst {resize} = this.props;\r\n\t\twindow.addEventListener('resize', resize);\r\n\t\tresize();\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({ isSnapSet: true });\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tscrollToContent = (elemId) => {\r\n\t\tconst element = document.getElementById(elemId);\r\n\t\telement.scrollIntoView({behavior: 'smooth'});\r\n\t}\r\n\r\n\tscrollToTop = () => {\r\n\t\twindow.scrollTo({top: 0, left: 0, behavior: 'smooth'});\r\n\t}\r\n\r\n    render() {\r\n\t\tconst {isSnapSet} = this.state,\r\n\t\t\t{isInverted, isMobile, handleUpdateVisibleContent} = this.props;\r\n\r\n\t\tlet contentContainers = [\r\n\t\t\t{\r\n\t\t\t\tcontent: <Intro scrollToContent={this.scrollToContent} scrollToTop={this.scrollToTop} />, \r\n\t\t\t\tcontentId: null, \r\n\t\t\t\tcontentClass: 'intro-main-container',\r\n\t\t\t\tcontentName: 'Intro',\r\n\t\t\t\tvisibilityThreshold: .75\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcontent: <Skills />,\r\n\t\t\t\tcontentId: 'skills-content', \r\n\t\t\t\tcontentClass: 'skills-row',\r\n\t\t\t\tcontentName: isMobile ? 'Skills' : 'Technical Skills',\r\n\t\t\t\tvisibilityThreshold: .25\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcontent: <Experience />, \r\n\t\t\t\tcontentId: 'experience-content', \r\n\t\t\t\tcontentClass: 'experience-row',\r\n\t\t\t\tcontentName: 'Experience',\r\n\t\t\t\tvisibilityThreshold: .25\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcontent: <Education />,\r\n\t\t\t\tcontentId: 'education-content', \r\n\t\t\t\tcontentClass: 'education-row',\r\n\t\t\t\tcontentName: 'Education',\r\n\t\t\t\tvisibilityThreshold: .25\r\n\t\t\t}\r\n\t\t];\r\n\r\n        return (\r\n\t\t\t<div id='app'>\r\n\t\t\t\t<Grid className='content-rows-container'>\r\n\t\t\t\t\t{contentContainers.map((container, i) => {\r\n\t\t\t\t\t\tconst {content, contentId, contentClass, contentName, visibilityThreshold} = container;\r\n\t\t\t\t\t\tlet c = contentClass === 'intro-main-container' ? contentClass : `sub-row ${contentClass}`;\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid.Row key={i} id={contentId} className={`${c}${isInverted ? '-inverted' : ''} ${isSnapSet ? 'content-container' : ''}`} centered>\r\n\t\t\t\t\t\t\t\t<InView threshold={visibilityThreshold} onChange={(inView) => inView && handleUpdateVisibleContent(contentName)}>\r\n\t\t\t\t\t\t\t\t\t{content}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</InView>\r\n\t\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<BottomNav isSnapSet={isSnapSet} scrollToTop={this.scrollToTop} />\r\n\t\t\t\t<Checkbox className='color-slider' toggle onClick={() => this.props.handleUpdateIsInverted()} />\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInverted: state.IsInvertedReducer.isInverted,\r\n\t\tisMobile: state.IsMobileReducer.isMobile\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\thandleUpdateIsInverted: () => {\r\n\t\t\tdispatch({ type: 'UPDATE_ISINVERTED' })\r\n\t\t},\r\n\t\tresize: () => {\r\n\t\t\tdispatch({ type: 'UPDATE_ISMOBILE' })\r\n\t\t},\r\n\t\thandleUpdateVisibleContent: (content) => {\r\n\t\t\tdispatch({ type: 'UPDATE_VISIBLECONTENT', content: content })\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer);","import React, { Component } from 'react';\r\n\r\nimport MainContainer from './Components/MainContainer/MainContainer';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<MainContainer />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const initState = { isMobile: null };\r\n\r\nconst IsMobileReducer = (state = initState, action) => {\r\n    if (action.type === 'UPDATE_ISMOBILE') {\r\n\t\tconst {isMobile} = state;\r\n\t\tlet currentIsMobileState = (window.innerWidth <= 795);\r\n\t\tif (currentIsMobileState !== isMobile) {\r\n            return { isMobile: currentIsMobileState };\r\n\t\t}\r\n    }\r\n    return state;\r\n} \r\n\r\nexport default IsMobileReducer;","const initState = { isInverted: false };\r\n\r\nconst IsInvertedReducer = (state = initState, action) => {\r\n    if (action.type === 'UPDATE_ISINVERTED') {\r\n        const {isInverted} = state;\r\n        return { isInverted: !isInverted }\r\n    }\r\n    return state;\r\n} \r\n\r\nexport default IsInvertedReducer;","const initState = { visibleContent: null };\r\n\r\nconst VisibleContentReducer = (state = initState, action) => {\r\n    if (action.type === 'UPDATE_VISIBLECONTENT') {\r\n\t\treturn {visibleContent: action.content};\r\n    }\r\n    return state;\r\n} \r\n\r\nexport default VisibleContentReducer;","import { combineReducers } from 'redux';\r\n\r\nimport IsMobileReducer from './IsMobileReducer';\r\nimport IsInvertedReducer from './IsInvertedReducer';\r\nimport VisibleContentReducer from './VisibleContentReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n    IsMobileReducer,\r\n    IsInvertedReducer,\r\n    VisibleContentReducer\r\n});\r\n\r\nexport default RootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { legacy_createStore as createStore } from 'redux';\r\nimport { Provider  } from 'react-redux';\r\nimport RootReducer from './Reducers/RootReducer';\r\n\r\nconst store = createStore(RootReducer);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}